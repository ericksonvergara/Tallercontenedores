/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;
import static GUI.paciente.pac;
import static GUI.paciente.pac2;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import tallercontenedores.contenedor_ingreso;
import tallercontenedores.contenedor_paciente;
import java.text.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import tallercontenedores.Archivo;
import tallercontenedores.Conexion;


/**
 *
 * @author SENA
 */
public class ingreso extends javax.swing.JFrame {

    public static java.util.ArrayList ingreso = new java.util.ArrayList();
    public static contenedor_ingreso ingreso2 = null;
    private DefaultTableModel model;

//    public static String formato = "dd/MMM/yyyy";
//    public static String fecha;
//    public static DateFormat formato1;
    
    public static String patron = "dd/MMM/yyyy";
    public static String sfecha;
    public static DateFormat formato1;

    /**
     * Creates new form estado
     */
    public ingreso() {
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMonthChooserBeanInfo1 = new com.toedter.calendar.JMonthChooserBeanInfo();
        jLabel1 = new javax.swing.JLabel();
        fecha_i = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cedula = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        nombre = new javax.swing.JTextField();
        buscar = new javax.swing.JButton();
        agregar = new javax.swing.JButton();
        enviar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabla_ingreso = new javax.swing.JTable();
        exportar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(500, 450));
        setResizable(false);
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("INGRESO DEL PACIENTE");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(131, 24, 176, 17);

        fecha_i.setMinSelectableDate(new java.util.Date(-62135747899000L));
        getContentPane().add(fecha_i);
        fecha_i.setBounds(227, 129, 140, 30);

        jLabel2.setText("Fecha ingreso:");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(138, 143, 76, 16);

        jLabel4.setText("Cedula: ");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(10, 83, 43, 16);
        getContentPane().add(cedula);
        cedula.setBounds(68, 70, 90, 30);

        jLabel5.setText("Nombre:");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(166, 83, 47, 16);

        nombre.setEditable(false);
        getContentPane().add(nombre);
        nombre.setBounds(220, 70, 220, 30);

        buscar.setText("buscar");
        buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarActionPerformed(evt);
            }
        });
        getContentPane().add(buscar);
        buscar.setBounds(50, 200, 80, 25);

        agregar.setText("agregar");
        agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarActionPerformed(evt);
            }
        });
        getContentPane().add(agregar);
        agregar.setBounds(160, 200, 73, 25);

        enviar.setText("mostrar");
        enviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enviarActionPerformed(evt);
            }
        });
        getContentPane().add(enviar);
        enviar.setBounds(260, 200, 73, 25);

        tabla_ingreso.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Cedula", "Nombre", "Fecha de ingreso"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tabla_ingreso);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(10, 250, 452, 100);

        exportar.setText("exportar");
        exportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportarActionPerformed(evt);
            }
        });
        getContentPane().add(exportar);
        exportar.setBounds(350, 200, 80, 25);

        jLabel3.setIcon(new javax.swing.ImageIcon("C:\\Users\\ERICK\\Documents\\NetBeansProjects\\Tallercontenedores\\src\\iconos\\fondoIngreso.jpg")); // NOI18N
        getContentPane().add(jLabel3);
        jLabel3.setBounds(0, 0, 520, 410);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarActionPerformed
        try {
            // TODO add your handling code here:
            int ced = Integer.parseInt(cedula.getText().trim());        
            
            Conexion con = new Conexion();
            con.ConexionPostgres();
            //boolean buscar = false;
            String query = "SELECT * FROM paciente WHERE cedula_paciente =" + ced;
            ResultSet rs = con.consultar(query);

            if (rs.next()) {
                nombre.setText(rs.getString("nombre_paciente"));
                JOptionPane.showMessageDialog(this, "Busqueda Exitosa!");
            } else {
                JOptionPane.showMessageDialog(this, "No existe el Paciente!");
            }

            con.cerrar();
            /*
            contenedor_ingreso in = null;
            
            for(int i =0; i<pac.size(); i++)
            {
                pac2 = (contenedor_paciente)pac.get(i);
                
                if(ced==pac2.getCedula())
                {
                    buscar = true;
                    break;
                }
            }
            
            if(buscar)
            {
                nombre.setText(pac2.getNombre());
            }else{ 
                JOptionPane.showMessageDialog(null,"No existen datos!","ERROR",JOptionPane.ERROR_MESSAGE);
            }
            */
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ingreso.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(ingreso.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(ingreso.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(ingreso.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }//GEN-LAST:event_buscarActionPerformed

    private void agregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarActionPerformed
        try {
            // TODO add your handling code here:
            int ced = Integer.parseInt(cedula.getText().trim());
            //String nombre_paciente = pac2.getNombre().trim();
            //boolean saber = false;
            //contenedor_ingreso ingreso_a = null;
            
            formato1 = DateFormat.getDateInstance();
            sfecha = formato1.format(fecha_i.getDate());
            //System.out.println("hoy es: " + sfecha);
            
            Conexion con = new Conexion();
            con.ConexionPostgres();
            String query = "INSERT INTO ingreso VALUES("+ced+",'"+nombre.getText().trim()+"','"+sfecha+"')";
            JOptionPane.showMessageDialog(this, "Registro exitoso!");
            con.actualizar(query);
            con.cerrar();
            
            /*
            for(int i =0; i<pac.size(); i++)
            {
                pac2=(contenedor_paciente)pac.get(i);
                
                if(ced==pac2.getCedula());
                {
                    saber = true;
                    break;
                }
            }
            if(saber)
            {
                String nom = (String) nombre.getName();
                contenedor_ingreso ing = new contenedor_ingreso(ced, nom, fecha_i.getDate());
                ingreso.add(ing);
            }else{
                
            }
            */
            cedula.setText(null);
            nombre.setText(null);
            fecha_i.setDate(null);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ingreso.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(ingreso.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(ingreso.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(ingreso.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_agregarActionPerformed

    private void enviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enviarActionPerformed
        try {
            int con1=0;
            // TODO add your handling code here:
            //datos.setText(null);
            Conexion con = new Conexion();
            con.ConexionPostgres();
            String query = "SELECT * FROM ingreso ORDER BY cedula_paciente";
            ResultSet rs = con.consultar(query);
            
            String data[][]={};
            String col[] = {"Cedula", "Nombre","Fecha ingreso"};
            model = new DefaultTableModel(data,col);
            tabla_ingreso.setModel(model);
            
            while(rs.next()){
                model.insertRow(con1,new Object[]{}); //INSERTA FILA EN TIEMPO DE EJECUCION
                model.setValueAt(rs.getInt("cedula_paciente"), con1, 0);
                model.setValueAt(rs.getString("nombre_paciente"), con1, 1);
                model.setValueAt(rs.getDate("fecha_ingreso"), con1, 2);
                
            }
            
            /*
            formato1 = DateFormat.getDateInstance();
            for (int i = 0; i<ingreso.size(); i++){
                contenedor_ingreso ingre = (contenedor_ingreso) ingreso.get(i);
                //datos.setText( datos.getText() + ingre.getCedula() + "\t" + pac2.getNombre() + "\t" + formato1.format(ingre.getFecha_ingreso()) + "\n" );
                model.insertRow(con1,new Object[]{}); //INSERTA FILA EN TIEMPO DE EJECUCION
                model.setValueAt(ingre.getCedula(), con1, 0);
                model.setValueAt(pac2.getNombre(), con1, 1);
                model.setValueAt(formato1.format(ingre.getFecha_ingreso()), con1, 2);
            }
            */
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ingreso.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(ingreso.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(ingreso.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(ingreso.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_enviarActionPerformed

    private void exportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportarActionPerformed
        try {
            // TODO add your handling code here:
            // TODO add your handling code here:
//        String cad="Cedula \t Nombre \t Fecha de ingreso \n";
//        
//        for(int i =0; i<ingreso.size(); i++){
//        contenedor_ingreso ingr = (contenedor_ingreso)ingreso.get(i);
//        cad+= ingr.getCedula() + "\t" + pac2.getNombre() + "\t" + formato1.format(ingr.getFecha_ingreso()) + "\n";    
//     }

            Document documento = new Document();
            String ruta = System.getProperty("user.home");

            try {
                try {
                    PdfWriter.getInstance(documento, new FileOutputStream(ruta + "/Desktop/reporte_ingreso.pdf"));
                } catch (DocumentException ex) {
                    Logger.getLogger(ingreso.class.getName()).log(Level.SEVERE, null, ex);
                }
            } catch (FileNotFoundException ex) {
                Logger.getLogger(ingreso.class.getName()).log(Level.SEVERE, null, ex);
            }

            documento.open();
            PdfPTable tabla_ingreso = new PdfPTable(3);
            tabla_ingreso.addCell("Cedula");
            tabla_ingreso.addCell("Nombre");
            tabla_ingreso.addCell("Fecha Ingreso");
            

            Conexion con = new Conexion();
            con.ConexionPostgres();
            String query = "SELECT * FROM ingreso";
            java.sql.ResultSet rs = con.consultar(query);
            
            if(rs.next()){
                while(rs.next()){
                    tabla_ingreso.addCell(rs.getString(1));
                    tabla_ingreso.addCell(rs.getString(2));
                    tabla_ingreso.addCell(rs.getString(3));
                }
                
                try {
                    documento.add(tabla_ingreso);
                } catch (DocumentException ex) {
                    Logger.getLogger(ingreso.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            con.cerrar();
            documento.close();
            JOptionPane.showMessageDialog(this, "Reporte Creado!.");

            //Archivo.grabar("ingreso.xls", cad);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ingreso.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(ingreso.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(ingreso.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(ingreso.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_exportarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ingreso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ingreso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ingreso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ingreso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }


        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ingreso().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton agregar;
    private javax.swing.JButton buscar;
    private javax.swing.JTextField cedula;
    private javax.swing.JButton enviar;
    private javax.swing.JButton exportar;
    private com.toedter.calendar.JDateChooser fecha_i;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private com.toedter.calendar.JMonthChooserBeanInfo jMonthChooserBeanInfo1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField nombre;
    private javax.swing.JTable tabla_ingreso;
    // End of variables declaration//GEN-END:variables
}
